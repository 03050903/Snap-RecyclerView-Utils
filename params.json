{"name":"Snap RecyclerView Utils","tagline":"Now use RecyclerView Adapter without actually creating one.","body":"# Snap RecyclerView Utils\r\n\r\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Snap--RecyclerView--Utils-green.svg?style=true)](https://android-arsenal.com/details/1/2884)\r\n\r\nSimple Library to create RecyclerView Adapters and Viewholder in a snap.\r\n\r\nSend any data to any Viewholder without creating custom RecyclerView Adapters.\r\n\r\n## Add to your project\r\n\r\n[![Release](https://img.shields.io/github/release/prashantsolanki3/Snap-RecyclerView-Utils.svg?label=jitpack)](https://jitpack.io/#prashantsolanki3/Snap-RecyclerView-Utils)\r\n\r\nAdd JitPack to repositories in your project's root `build.gradle` file:\r\n\r\n```Gradle\r\nallprojects {\r\n\trepositories {\r\n\t\t...\r\n\t\tmaven { url \"https://jitpack.io\" }\r\n\t}\r\n}\r\n```\r\n\r\nAdd the dependency to your module's `build.gradle` file:\r\n\r\n```Gradle\r\ndependencies {\r\n\t...\r\n    compile 'com.github.prashantsolanki3:Snap-RecyclerView-Utils:v1.1'\r\n}\r\n```\r\n\r\n---\r\n\r\n# Usage\r\n\r\nSimple usage using `ViewHolder` which extends `SnapViewHolder`.\r\n\r\n```Java\r\nSnapAdapter<SimpleProduct,ViewHolderProduct>  adapterRecycler = new SnapAdapter<>(getContext(),\r\n                SimpleProduct.class, //Model Class containing data\r\n                R.layout.item_recycler_product, // Item Layout\r\n                ViewHolderProduct.class); // ViewHolder\r\n                \r\nrecyclerView.setAdapter(adapterRecycler);\r\n\r\n//Add items to RecyclerView\r\nadapterRecycler.addItems(new ArrayList<SimpleProduct>());\r\n```\r\n\r\n`ViewHolderProduct` class which extends `SnapViewHolder`\r\n* Overrides 2 methods: `setData()` and `animateViewHolder()`.\r\n\r\n```java\r\npublic class ViewHolderProduct extends SnapViewHolder<SimpleProduct> {\r\n\r\n    final TextView title;\r\n    final ImageView thumbnail;\r\n    final SimpleProduct simpleProduct;\r\n\r\n    public VhProductList(View itemView, Context context) {\r\n        super(itemView, context);\r\n        initViews();\r\n    }\r\n\r\n    private void initViews() {\r\n        title = (TextView) itemView.findViewById(R.id.product_title);\r\n        thumbnail= (ImageView) itemView.findViewById(R.id.product_image);\r\n    }\r\n\r\n    @Override\r\n    public void setData(SimpleProduct data, int pos) {\r\n        this.simpleProduct = data;\r\n        \r\n        thumbnail.setImageDrawable(null);\r\n        \r\n        title.setText(data.getTitle());\r\n\r\n        Glide.with(getContext())\r\n                .load(data.getListImage())\r\n                .into(thumbnail);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void animateViewHolder(SnapViewHolder viewHolder, int position) {\r\n        //Apply Animations to ViewHolder.\r\n        \r\n        AnimationSet set = new AnimationSet(true);\r\n\r\n        if (position % 3 == 0)\r\n            set.addAnimation(AnimationUtils.loadAnimation(getContext(), R.anim.gp_slide_in_left));\r\n        else if (position % 3 == 1)\r\n            set.addAnimation(AnimationUtils.loadAnimation(getContext(), R.anim.gp_slide_in_right));\r\n\r\n        set.addAnimation(AnimationUtils.loadAnimation(getContext(), R.anim.gp_slide_in_bottom));\r\n\r\n        viewHolder.itemView.startAnimation(set);\r\n    }\r\n}\r\n```\r\n\r\n### If your `Viewholder` doesn't extend `SnapViewHolder`.\r\n\r\n* Override `populateViewHolderItem()` method in `SnapAdapter` to `setData()`.\r\n* Optionally override `animateItems()` method in `SnapAdaper` to animate Items.\r\n","google":"UA-55643409-4","note":"Don't delete this file! It's used internally to help with page regeneration."}